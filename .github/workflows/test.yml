name: Test Coverage

on:
  release:
    types: [prereleased, released]

  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

env:
  FORCE_COLOR: 1
  NPM_CONFIG_COLOR: always

jobs:
  # verify against ranges defined as supported in engines.node
  test_matrix:
    strategy:
      matrix:
        node-version:
          - 20.8.1
          - 20
          - 21
          - 18

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
      - run: git config --global user.name github-actions
      - run: git config --global user.email github-actions@github.com
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - run: pnpm audit signatures
      - run: pnpm build
      - run: pnpm test

  # separate job to set as required in branch protection,
  # as the build names above change each time Node versions change
  test:
    runs-on: ubuntu-latest
    needs:
      - test_matrix
    if: ${{ !cancelled() }}
    steps:
      - name: All matrix versions passed
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some matrix version failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
